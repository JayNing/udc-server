/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.thrift.common.body;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-05-25")
public class ExercisesInfo implements org.apache.thrift.TBase<ExercisesInfo, ExercisesInfo._Fields>, java.io.Serializable, Cloneable, Comparable<ExercisesInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ExercisesInfo");

  private static final org.apache.thrift.protocol.TField EXERCISES_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("exercisesId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField EXCS_TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("excsTitle", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CREATE_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("createUserId", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField FLAG_FIELD_DESC = new org.apache.thrift.protocol.TField("flag", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField LAST_EDIT_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("lastEditUserId", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField LAST_EDIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("lastEditTime", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField CATEGORY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("categoryId", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField CURR_ANSWER_CONTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("currAnswerContent", org.apache.thrift.protocol.TType.STRING, (short)10);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ExercisesInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ExercisesInfoTupleSchemeFactory();

  public int exercisesId; // required
  public int type; // required
  public java.lang.String excsTitle; // required
  public int createUserId; // required
  public long createTime; // required
  public int flag; // required
  public int lastEditUserId; // required
  public long lastEditTime; // required
  public int categoryId; // required
  public java.lang.String currAnswerContent; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    EXERCISES_ID((short)1, "exercisesId"),
    TYPE((short)2, "type"),
    EXCS_TITLE((short)3, "excsTitle"),
    CREATE_USER_ID((short)4, "createUserId"),
    CREATE_TIME((short)5, "createTime"),
    FLAG((short)6, "flag"),
    LAST_EDIT_USER_ID((short)7, "lastEditUserId"),
    LAST_EDIT_TIME((short)8, "lastEditTime"),
    CATEGORY_ID((short)9, "categoryId"),
    CURR_ANSWER_CONTENT((short)10, "currAnswerContent");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // EXERCISES_ID
          return EXERCISES_ID;
        case 2: // TYPE
          return TYPE;
        case 3: // EXCS_TITLE
          return EXCS_TITLE;
        case 4: // CREATE_USER_ID
          return CREATE_USER_ID;
        case 5: // CREATE_TIME
          return CREATE_TIME;
        case 6: // FLAG
          return FLAG;
        case 7: // LAST_EDIT_USER_ID
          return LAST_EDIT_USER_ID;
        case 8: // LAST_EDIT_TIME
          return LAST_EDIT_TIME;
        case 9: // CATEGORY_ID
          return CATEGORY_ID;
        case 10: // CURR_ANSWER_CONTENT
          return CURR_ANSWER_CONTENT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __EXERCISESID_ISSET_ID = 0;
  private static final int __TYPE_ISSET_ID = 1;
  private static final int __CREATEUSERID_ISSET_ID = 2;
  private static final int __CREATETIME_ISSET_ID = 3;
  private static final int __FLAG_ISSET_ID = 4;
  private static final int __LASTEDITUSERID_ISSET_ID = 5;
  private static final int __LASTEDITTIME_ISSET_ID = 6;
  private static final int __CATEGORYID_ISSET_ID = 7;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.EXERCISES_ID, new org.apache.thrift.meta_data.FieldMetaData("exercisesId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EXCS_TITLE, new org.apache.thrift.meta_data.FieldMetaData("excsTitle", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("createUserId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FLAG, new org.apache.thrift.meta_data.FieldMetaData("flag", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LAST_EDIT_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("lastEditUserId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LAST_EDIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("lastEditTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CATEGORY_ID, new org.apache.thrift.meta_data.FieldMetaData("categoryId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CURR_ANSWER_CONTENT, new org.apache.thrift.meta_data.FieldMetaData("currAnswerContent", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ExercisesInfo.class, metaDataMap);
  }

  public ExercisesInfo() {
  }

  public ExercisesInfo(
    int exercisesId,
    int type,
    java.lang.String excsTitle,
    int createUserId,
    long createTime,
    int flag,
    int lastEditUserId,
    long lastEditTime,
    int categoryId,
    java.lang.String currAnswerContent)
  {
    this();
    this.exercisesId = exercisesId;
    setExercisesIdIsSet(true);
    this.type = type;
    setTypeIsSet(true);
    this.excsTitle = excsTitle;
    this.createUserId = createUserId;
    setCreateUserIdIsSet(true);
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.flag = flag;
    setFlagIsSet(true);
    this.lastEditUserId = lastEditUserId;
    setLastEditUserIdIsSet(true);
    this.lastEditTime = lastEditTime;
    setLastEditTimeIsSet(true);
    this.categoryId = categoryId;
    setCategoryIdIsSet(true);
    this.currAnswerContent = currAnswerContent;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ExercisesInfo(ExercisesInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.exercisesId = other.exercisesId;
    this.type = other.type;
    if (other.isSetExcsTitle()) {
      this.excsTitle = other.excsTitle;
    }
    this.createUserId = other.createUserId;
    this.createTime = other.createTime;
    this.flag = other.flag;
    this.lastEditUserId = other.lastEditUserId;
    this.lastEditTime = other.lastEditTime;
    this.categoryId = other.categoryId;
    if (other.isSetCurrAnswerContent()) {
      this.currAnswerContent = other.currAnswerContent;
    }
  }

  public ExercisesInfo deepCopy() {
    return new ExercisesInfo(this);
  }

  @Override
  public void clear() {
    setExercisesIdIsSet(false);
    this.exercisesId = 0;
    setTypeIsSet(false);
    this.type = 0;
    this.excsTitle = null;
    setCreateUserIdIsSet(false);
    this.createUserId = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    setFlagIsSet(false);
    this.flag = 0;
    setLastEditUserIdIsSet(false);
    this.lastEditUserId = 0;
    setLastEditTimeIsSet(false);
    this.lastEditTime = 0;
    setCategoryIdIsSet(false);
    this.categoryId = 0;
    this.currAnswerContent = null;
  }

  public int getExercisesId() {
    return this.exercisesId;
  }

  public ExercisesInfo setExercisesId(int exercisesId) {
    this.exercisesId = exercisesId;
    setExercisesIdIsSet(true);
    return this;
  }

  public void unsetExercisesId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EXERCISESID_ISSET_ID);
  }

  /** Returns true if field exercisesId is set (has been assigned a value) and false otherwise */
  public boolean isSetExercisesId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EXERCISESID_ISSET_ID);
  }

  public void setExercisesIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EXERCISESID_ISSET_ID, value);
  }

  public int getType() {
    return this.type;
  }

  public ExercisesInfo setType(int type) {
    this.type = type;
    setTypeIsSet(true);
    return this;
  }

  public void unsetType() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TYPE_ISSET_ID);
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TYPE_ISSET_ID);
  }

  public void setTypeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TYPE_ISSET_ID, value);
  }

  public java.lang.String getExcsTitle() {
    return this.excsTitle;
  }

  public ExercisesInfo setExcsTitle(java.lang.String excsTitle) {
    this.excsTitle = excsTitle;
    return this;
  }

  public void unsetExcsTitle() {
    this.excsTitle = null;
  }

  /** Returns true if field excsTitle is set (has been assigned a value) and false otherwise */
  public boolean isSetExcsTitle() {
    return this.excsTitle != null;
  }

  public void setExcsTitleIsSet(boolean value) {
    if (!value) {
      this.excsTitle = null;
    }
  }

  public int getCreateUserId() {
    return this.createUserId;
  }

  public ExercisesInfo setCreateUserId(int createUserId) {
    this.createUserId = createUserId;
    setCreateUserIdIsSet(true);
    return this;
  }

  public void unsetCreateUserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATEUSERID_ISSET_ID);
  }

  /** Returns true if field createUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateUserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATEUSERID_ISSET_ID);
  }

  public void setCreateUserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATEUSERID_ISSET_ID, value);
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public ExercisesInfo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  public int getFlag() {
    return this.flag;
  }

  public ExercisesInfo setFlag(int flag) {
    this.flag = flag;
    setFlagIsSet(true);
    return this;
  }

  public void unsetFlag() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FLAG_ISSET_ID);
  }

  /** Returns true if field flag is set (has been assigned a value) and false otherwise */
  public boolean isSetFlag() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FLAG_ISSET_ID);
  }

  public void setFlagIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FLAG_ISSET_ID, value);
  }

  public int getLastEditUserId() {
    return this.lastEditUserId;
  }

  public ExercisesInfo setLastEditUserId(int lastEditUserId) {
    this.lastEditUserId = lastEditUserId;
    setLastEditUserIdIsSet(true);
    return this;
  }

  public void unsetLastEditUserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LASTEDITUSERID_ISSET_ID);
  }

  /** Returns true if field lastEditUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetLastEditUserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LASTEDITUSERID_ISSET_ID);
  }

  public void setLastEditUserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LASTEDITUSERID_ISSET_ID, value);
  }

  public long getLastEditTime() {
    return this.lastEditTime;
  }

  public ExercisesInfo setLastEditTime(long lastEditTime) {
    this.lastEditTime = lastEditTime;
    setLastEditTimeIsSet(true);
    return this;
  }

  public void unsetLastEditTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LASTEDITTIME_ISSET_ID);
  }

  /** Returns true if field lastEditTime is set (has been assigned a value) and false otherwise */
  public boolean isSetLastEditTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LASTEDITTIME_ISSET_ID);
  }

  public void setLastEditTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LASTEDITTIME_ISSET_ID, value);
  }

  public int getCategoryId() {
    return this.categoryId;
  }

  public ExercisesInfo setCategoryId(int categoryId) {
    this.categoryId = categoryId;
    setCategoryIdIsSet(true);
    return this;
  }

  public void unsetCategoryId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CATEGORYID_ISSET_ID);
  }

  /** Returns true if field categoryId is set (has been assigned a value) and false otherwise */
  public boolean isSetCategoryId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CATEGORYID_ISSET_ID);
  }

  public void setCategoryIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CATEGORYID_ISSET_ID, value);
  }

  public java.lang.String getCurrAnswerContent() {
    return this.currAnswerContent;
  }

  public ExercisesInfo setCurrAnswerContent(java.lang.String currAnswerContent) {
    this.currAnswerContent = currAnswerContent;
    return this;
  }

  public void unsetCurrAnswerContent() {
    this.currAnswerContent = null;
  }

  /** Returns true if field currAnswerContent is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrAnswerContent() {
    return this.currAnswerContent != null;
  }

  public void setCurrAnswerContentIsSet(boolean value) {
    if (!value) {
      this.currAnswerContent = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case EXERCISES_ID:
      if (value == null) {
        unsetExercisesId();
      } else {
        setExercisesId((java.lang.Integer)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((java.lang.Integer)value);
      }
      break;

    case EXCS_TITLE:
      if (value == null) {
        unsetExcsTitle();
      } else {
        setExcsTitle((java.lang.String)value);
      }
      break;

    case CREATE_USER_ID:
      if (value == null) {
        unsetCreateUserId();
      } else {
        setCreateUserId((java.lang.Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((java.lang.Long)value);
      }
      break;

    case FLAG:
      if (value == null) {
        unsetFlag();
      } else {
        setFlag((java.lang.Integer)value);
      }
      break;

    case LAST_EDIT_USER_ID:
      if (value == null) {
        unsetLastEditUserId();
      } else {
        setLastEditUserId((java.lang.Integer)value);
      }
      break;

    case LAST_EDIT_TIME:
      if (value == null) {
        unsetLastEditTime();
      } else {
        setLastEditTime((java.lang.Long)value);
      }
      break;

    case CATEGORY_ID:
      if (value == null) {
        unsetCategoryId();
      } else {
        setCategoryId((java.lang.Integer)value);
      }
      break;

    case CURR_ANSWER_CONTENT:
      if (value == null) {
        unsetCurrAnswerContent();
      } else {
        setCurrAnswerContent((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case EXERCISES_ID:
      return getExercisesId();

    case TYPE:
      return getType();

    case EXCS_TITLE:
      return getExcsTitle();

    case CREATE_USER_ID:
      return getCreateUserId();

    case CREATE_TIME:
      return getCreateTime();

    case FLAG:
      return getFlag();

    case LAST_EDIT_USER_ID:
      return getLastEditUserId();

    case LAST_EDIT_TIME:
      return getLastEditTime();

    case CATEGORY_ID:
      return getCategoryId();

    case CURR_ANSWER_CONTENT:
      return getCurrAnswerContent();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case EXERCISES_ID:
      return isSetExercisesId();
    case TYPE:
      return isSetType();
    case EXCS_TITLE:
      return isSetExcsTitle();
    case CREATE_USER_ID:
      return isSetCreateUserId();
    case CREATE_TIME:
      return isSetCreateTime();
    case FLAG:
      return isSetFlag();
    case LAST_EDIT_USER_ID:
      return isSetLastEditUserId();
    case LAST_EDIT_TIME:
      return isSetLastEditTime();
    case CATEGORY_ID:
      return isSetCategoryId();
    case CURR_ANSWER_CONTENT:
      return isSetCurrAnswerContent();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof ExercisesInfo)
      return this.equals((ExercisesInfo)that);
    return false;
  }

  public boolean equals(ExercisesInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_exercisesId = true;
    boolean that_present_exercisesId = true;
    if (this_present_exercisesId || that_present_exercisesId) {
      if (!(this_present_exercisesId && that_present_exercisesId))
        return false;
      if (this.exercisesId != that.exercisesId)
        return false;
    }

    boolean this_present_type = true;
    boolean that_present_type = true;
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (this.type != that.type)
        return false;
    }

    boolean this_present_excsTitle = true && this.isSetExcsTitle();
    boolean that_present_excsTitle = true && that.isSetExcsTitle();
    if (this_present_excsTitle || that_present_excsTitle) {
      if (!(this_present_excsTitle && that_present_excsTitle))
        return false;
      if (!this.excsTitle.equals(that.excsTitle))
        return false;
    }

    boolean this_present_createUserId = true;
    boolean that_present_createUserId = true;
    if (this_present_createUserId || that_present_createUserId) {
      if (!(this_present_createUserId && that_present_createUserId))
        return false;
      if (this.createUserId != that.createUserId)
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_flag = true;
    boolean that_present_flag = true;
    if (this_present_flag || that_present_flag) {
      if (!(this_present_flag && that_present_flag))
        return false;
      if (this.flag != that.flag)
        return false;
    }

    boolean this_present_lastEditUserId = true;
    boolean that_present_lastEditUserId = true;
    if (this_present_lastEditUserId || that_present_lastEditUserId) {
      if (!(this_present_lastEditUserId && that_present_lastEditUserId))
        return false;
      if (this.lastEditUserId != that.lastEditUserId)
        return false;
    }

    boolean this_present_lastEditTime = true;
    boolean that_present_lastEditTime = true;
    if (this_present_lastEditTime || that_present_lastEditTime) {
      if (!(this_present_lastEditTime && that_present_lastEditTime))
        return false;
      if (this.lastEditTime != that.lastEditTime)
        return false;
    }

    boolean this_present_categoryId = true;
    boolean that_present_categoryId = true;
    if (this_present_categoryId || that_present_categoryId) {
      if (!(this_present_categoryId && that_present_categoryId))
        return false;
      if (this.categoryId != that.categoryId)
        return false;
    }

    boolean this_present_currAnswerContent = true && this.isSetCurrAnswerContent();
    boolean that_present_currAnswerContent = true && that.isSetCurrAnswerContent();
    if (this_present_currAnswerContent || that_present_currAnswerContent) {
      if (!(this_present_currAnswerContent && that_present_currAnswerContent))
        return false;
      if (!this.currAnswerContent.equals(that.currAnswerContent))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + exercisesId;

    hashCode = hashCode * 8191 + type;

    hashCode = hashCode * 8191 + ((isSetExcsTitle()) ? 131071 : 524287);
    if (isSetExcsTitle())
      hashCode = hashCode * 8191 + excsTitle.hashCode();

    hashCode = hashCode * 8191 + createUserId;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(createTime);

    hashCode = hashCode * 8191 + flag;

    hashCode = hashCode * 8191 + lastEditUserId;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(lastEditTime);

    hashCode = hashCode * 8191 + categoryId;

    hashCode = hashCode * 8191 + ((isSetCurrAnswerContent()) ? 131071 : 524287);
    if (isSetCurrAnswerContent())
      hashCode = hashCode * 8191 + currAnswerContent.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(ExercisesInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetExercisesId()).compareTo(other.isSetExercisesId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExercisesId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.exercisesId, other.exercisesId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExcsTitle()).compareTo(other.isSetExcsTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExcsTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.excsTitle, other.excsTitle);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateUserId()).compareTo(other.isSetCreateUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createUserId, other.createUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFlag()).compareTo(other.isSetFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFlag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.flag, other.flag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLastEditUserId()).compareTo(other.isSetLastEditUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastEditUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastEditUserId, other.lastEditUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLastEditTime()).compareTo(other.isSetLastEditTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastEditTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastEditTime, other.lastEditTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCategoryId()).compareTo(other.isSetCategoryId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategoryId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.categoryId, other.categoryId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCurrAnswerContent()).compareTo(other.isSetCurrAnswerContent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrAnswerContent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.currAnswerContent, other.currAnswerContent);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ExercisesInfo(");
    boolean first = true;

    sb.append("exercisesId:");
    sb.append(this.exercisesId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("type:");
    sb.append(this.type);
    first = false;
    if (!first) sb.append(", ");
    sb.append("excsTitle:");
    if (this.excsTitle == null) {
      sb.append("null");
    } else {
      sb.append(this.excsTitle);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createUserId:");
    sb.append(this.createUserId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("flag:");
    sb.append(this.flag);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastEditUserId:");
    sb.append(this.lastEditUserId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastEditTime:");
    sb.append(this.lastEditTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("categoryId:");
    sb.append(this.categoryId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("currAnswerContent:");
    if (this.currAnswerContent == null) {
      sb.append("null");
    } else {
      sb.append(this.currAnswerContent);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ExercisesInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ExercisesInfoStandardScheme getScheme() {
      return new ExercisesInfoStandardScheme();
    }
  }

  private static class ExercisesInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<ExercisesInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ExercisesInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // EXERCISES_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.exercisesId = iprot.readI32();
              struct.setExercisesIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = iprot.readI32();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // EXCS_TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.excsTitle = iprot.readString();
              struct.setExcsTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CREATE_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.createUserId = iprot.readI32();
              struct.setCreateUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // FLAG
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.flag = iprot.readI32();
              struct.setFlagIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // LAST_EDIT_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.lastEditUserId = iprot.readI32();
              struct.setLastEditUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // LAST_EDIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastEditTime = iprot.readI64();
              struct.setLastEditTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CATEGORY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.categoryId = iprot.readI32();
              struct.setCategoryIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CURR_ANSWER_CONTENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.currAnswerContent = iprot.readString();
              struct.setCurrAnswerContentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ExercisesInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(EXERCISES_ID_FIELD_DESC);
      oprot.writeI32(struct.exercisesId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TYPE_FIELD_DESC);
      oprot.writeI32(struct.type);
      oprot.writeFieldEnd();
      if (struct.excsTitle != null) {
        oprot.writeFieldBegin(EXCS_TITLE_FIELD_DESC);
        oprot.writeString(struct.excsTitle);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_USER_ID_FIELD_DESC);
      oprot.writeI32(struct.createUserId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FLAG_FIELD_DESC);
      oprot.writeI32(struct.flag);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_EDIT_USER_ID_FIELD_DESC);
      oprot.writeI32(struct.lastEditUserId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_EDIT_TIME_FIELD_DESC);
      oprot.writeI64(struct.lastEditTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CATEGORY_ID_FIELD_DESC);
      oprot.writeI32(struct.categoryId);
      oprot.writeFieldEnd();
      if (struct.currAnswerContent != null) {
        oprot.writeFieldBegin(CURR_ANSWER_CONTENT_FIELD_DESC);
        oprot.writeString(struct.currAnswerContent);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ExercisesInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ExercisesInfoTupleScheme getScheme() {
      return new ExercisesInfoTupleScheme();
    }
  }

  private static class ExercisesInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<ExercisesInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ExercisesInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetExercisesId()) {
        optionals.set(0);
      }
      if (struct.isSetType()) {
        optionals.set(1);
      }
      if (struct.isSetExcsTitle()) {
        optionals.set(2);
      }
      if (struct.isSetCreateUserId()) {
        optionals.set(3);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(4);
      }
      if (struct.isSetFlag()) {
        optionals.set(5);
      }
      if (struct.isSetLastEditUserId()) {
        optionals.set(6);
      }
      if (struct.isSetLastEditTime()) {
        optionals.set(7);
      }
      if (struct.isSetCategoryId()) {
        optionals.set(8);
      }
      if (struct.isSetCurrAnswerContent()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetExercisesId()) {
        oprot.writeI32(struct.exercisesId);
      }
      if (struct.isSetType()) {
        oprot.writeI32(struct.type);
      }
      if (struct.isSetExcsTitle()) {
        oprot.writeString(struct.excsTitle);
      }
      if (struct.isSetCreateUserId()) {
        oprot.writeI32(struct.createUserId);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetFlag()) {
        oprot.writeI32(struct.flag);
      }
      if (struct.isSetLastEditUserId()) {
        oprot.writeI32(struct.lastEditUserId);
      }
      if (struct.isSetLastEditTime()) {
        oprot.writeI64(struct.lastEditTime);
      }
      if (struct.isSetCategoryId()) {
        oprot.writeI32(struct.categoryId);
      }
      if (struct.isSetCurrAnswerContent()) {
        oprot.writeString(struct.currAnswerContent);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ExercisesInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.exercisesId = iprot.readI32();
        struct.setExercisesIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.type = iprot.readI32();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.excsTitle = iprot.readString();
        struct.setExcsTitleIsSet(true);
      }
      if (incoming.get(3)) {
        struct.createUserId = iprot.readI32();
        struct.setCreateUserIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.flag = iprot.readI32();
        struct.setFlagIsSet(true);
      }
      if (incoming.get(6)) {
        struct.lastEditUserId = iprot.readI32();
        struct.setLastEditUserIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.lastEditTime = iprot.readI64();
        struct.setLastEditTimeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.categoryId = iprot.readI32();
        struct.setCategoryIdIsSet(true);
      }
      if (incoming.get(9)) {
        struct.currAnswerContent = iprot.readString();
        struct.setCurrAnswerContentIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

